// <auto-generated />
using System;
using KOLOS2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KOLOS2.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250613112929_fixTables")]
    partial class fixTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KOLOS2.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "adam",
                            HireDate = new DateTime(2005, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "jesion"
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "adam",
                            HireDate = new DateTime(2005, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "jesion"
                        });
                });

            modelBuilder.Entity("KOLOS2.Models.Nursery", b =>
                {
                    b.Property<int>("NurseryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NurseryId"));

                    b.Property<DateTime>("EstablishsedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NurseryId");

                    b.ToTable("Nursery");

                    b.HasData(
                        new
                        {
                            NurseryId = 1,
                            EstablishsedDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "nur1"
                        },
                        new
                        {
                            NurseryId = 2,
                            EstablishsedDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "nur2"
                        });
                });

            modelBuilder.Entity("KOLOS2.Models.Responsible", b =>
                {
                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BatchId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Responsible");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            EmployeeId = 1,
                            Role = "role1"
                        },
                        new
                        {
                            BatchId = 2,
                            EmployeeId = 1,
                            Role = "role1"
                        },
                        new
                        {
                            BatchId = 3,
                            EmployeeId = 2,
                            Role = "role2"
                        },
                        new
                        {
                            BatchId = 4,
                            EmployeeId = 1,
                            Role = "role1"
                        },
                        new
                        {
                            BatchId = 3,
                            EmployeeId = 1,
                            Role = "role2"
                        });
                });

            modelBuilder.Entity("KOLOS2.Models.SeedlingBatch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"));

                    b.Property<int>("NurseryId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReadyDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SownDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<int?>("TreeSpeciesSpaciesId")
                        .HasColumnType("int");

                    b.HasKey("BatchId");

                    b.HasIndex("NurseryId");

                    b.HasIndex("TreeSpeciesSpaciesId");

                    b.ToTable("Seedling_Batch");

                    b.HasData(
                        new
                        {
                            BatchId = 1,
                            NurseryId = 1,
                            Quantity = 20,
                            SownDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SpeciesId = 1
                        },
                        new
                        {
                            BatchId = 2,
                            NurseryId = 2,
                            Quantity = 20,
                            SownDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SpeciesId = 2
                        },
                        new
                        {
                            BatchId = 3,
                            NurseryId = 1,
                            Quantity = 20,
                            SownDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SpeciesId = 3
                        },
                        new
                        {
                            BatchId = 4,
                            NurseryId = 1,
                            Quantity = 20,
                            SownDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SpeciesId = 2
                        });
                });

            modelBuilder.Entity("KOLOS2.Models.TreeSpecies", b =>
                {
                    b.Property<int>("SpaciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpaciesId"));

                    b.Property<int>("GrowthTimeInYears")
                        .HasColumnType("int");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SpaciesId");

                    b.ToTable("Tree_Species");

                    b.HasData(
                        new
                        {
                            SpaciesId = 1,
                            GrowthTimeInYears = 12,
                            LatinName = "dab"
                        },
                        new
                        {
                            SpaciesId = 2,
                            GrowthTimeInYears = 12,
                            LatinName = "wierzba"
                        },
                        new
                        {
                            SpaciesId = 3,
                            GrowthTimeInYears = 12,
                            LatinName = "jesion"
                        });
                });

            modelBuilder.Entity("KOLOS2.Models.Responsible", b =>
                {
                    b.HasOne("KOLOS2.Models.SeedlingBatch", null)
                        .WithMany("Responsibles")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KOLOS2.Models.Employee", null)
                        .WithMany("Responsibles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KOLOS2.Models.SeedlingBatch", b =>
                {
                    b.HasOne("KOLOS2.Models.Nursery", null)
                        .WithMany("NurserySeedlingBatches")
                        .HasForeignKey("NurseryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KOLOS2.Models.TreeSpecies", null)
                        .WithMany("TreeSpeciesSeedlingBatches")
                        .HasForeignKey("TreeSpeciesSpaciesId");
                });

            modelBuilder.Entity("KOLOS2.Models.Employee", b =>
                {
                    b.Navigation("Responsibles");
                });

            modelBuilder.Entity("KOLOS2.Models.Nursery", b =>
                {
                    b.Navigation("NurserySeedlingBatches");
                });

            modelBuilder.Entity("KOLOS2.Models.SeedlingBatch", b =>
                {
                    b.Navigation("Responsibles");
                });

            modelBuilder.Entity("KOLOS2.Models.TreeSpecies", b =>
                {
                    b.Navigation("TreeSpeciesSeedlingBatches");
                });
#pragma warning restore 612, 618
        }
    }
}
